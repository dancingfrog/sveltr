package com.ericsson.Methods;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.json.JSONArray;
import org.json.JSONObject;

import com.ericsson.obj.voProduct;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;


public class POIStats {
	String _message="";
	java.sql.Date _date;
	boolean _flag = false;
	
	String parcelpremiumcolumns = "IND_CODE,PID as 'Total Records', stabb,PID, PID_percentage,LinkID,LinkID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage, PARCEL_LATITUDE, PARCEL_LATITUDE_percentage, PARCEL_LONGITUDE, PARCEL_LONGITUDE_percentage, IND_CODE ";
	String parcelpluscolumns =  "IND_CODE,PID as 'Total Records', stabb,PID, PID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage, PARCEL_LATITUDE, PARCEL_LATITUDE_percentage, PARCEL_LONGITUDE, PARCEL_LONGITUDE_percentage, IND_CODE ";
	String parcelclassiccolumns = "IND_CODE,PID as 'Total Records', stabb,PID, PID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage,  IND_CODE ";
	
	String parcelpremiumhistoriccolumns = "PID,PID_percentage,ADDRID,ADDRID_percentage,RECTYPE,RECTYPE_percentage,BUSINESS,BUSINESS_percentage,FNAME,FNAME_percentage,MNAME,MNAME_percentage,LNAME,LNAME_percentage,SUFFIX,SUFFIX_percentage,GENDER,GENDER_percentage,DOB,DOB_percentage,ADDRESS,ADDRESS_percentage,HOUSE,HOUSE_percentage,PREDIR,PREDIR_percentage,STREET,STREET_percentage,STRTYPE,STRTYPE_percentage,POSTDIR,POSTDIR_percentage,APTTYPE,APTTYPE_percentage,APTNBR,APTNBR_percentage,CITY,CITY_percentage,STATE,STATE_percentage,ZIP,ZIP_percentage,Z4,Z4_percentage,VACANT,VACANT_percentage,PROP_SALEAMT,PROP_SALEAMT_percentage,PROP_LENDERNAME,PROP_LENDERNAME_percentage,PROP_MTGAMT,PROP_MTGAMT_percentage,PROP_RECDATE,PROP_RECDATE_percentage,PROP_TAXAMT,PROP_TAXAMT_percentage,PROP_TAXYR,PROP_TAXYR_percentage,PROP_ASSED_VAL,PROP_ASSED_VAL_percentage";
	
	String stateparcelpremiumcolumns = "IND_CODE,PID as 'Total Records', PID, PID_percentage,LinkID,LinkID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage, PARCEL_LATITUDE, PARCEL_LATITUDE_percentage, PARCEL_LONGITUDE, PARCEL_LONGITUDE_percentage, IND_CODE ";
	String stateparcelpluscolumns =  "IND_CODE,PID as 'Total Records', PID, PID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage, PARCEL_LATITUDE, PARCEL_LATITUDE_percentage, PARCEL_LONGITUDE, PARCEL_LONGITUDE_percentage, IND_CODE ";
	String stateparcelclassiccolumns = "IND_CODE,PID as 'Total Records', PID, PID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage,  IND_CODE ";
	
	String fipsparcelpremiumcolumns = "IND_CODE,PID as 'Total Records', stabb,FIPS,PID, PID_percentage,LinkID,LinkID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage, PARCEL_LATITUDE, PARCEL_LATITUDE_percentage, PARCEL_LONGITUDE, PARCEL_LONGITUDE_percentage, IND_CODE ";
	String fipsparcelpluscolumns =  "IND_CODE,PID as 'Total Records', stabb,FIPS,PID, PID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage, PARCEL_LATITUDE, PARCEL_LATITUDE_percentage, PARCEL_LONGITUDE, PARCEL_LONGITUDE_percentage, IND_CODE ";
	String fipsparcelclassiccolumns = "IND_CODE,PID as 'Total Records', stabb,FIPS,PID, PID_percentage,FNAME, FNAME_percentage, MNAME,"+
								"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
								"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
								"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage,  IND_CODE ";

	
	
	public static void main(String[] args) throws Exception, IOException, SQLException {
		//new LoadGeocodedFireDepartmentData().getFilesFromFolder();
		//new POIStats().getPoiStats("propertyattributefabric","paf_metrics");
		new POIStats().getPoiStats("GlobalDataScorecard", "routing j server data");
		//new POIStats().getCountries("wppoi_percentageattribute_fill_rates");
		//new POIStats().getAEDStats("papp_final","AK");
		//new POIStats().getAEDStats("propertattributeparcelpremiumhistoric", "USA", "");
	}
	
	
	
	public JSONArray getAEDStats(String product,String state,String fips)
	{
		String tablename = "";
		String sql = null;
		String _columns = "";
		String convertedstring = "";
		
		if((product.toLowerCase().equals("propertyattributeparcelplus")) || (product.toLowerCase().equals("propertyattributeparcelpremium")) ||
				(product.toLowerCase().equals("propertyattributeparcelclassic")) || (product.toLowerCase().equals("propertattributeparcelpremiumhistoric"))){
			if(fips.equals("All")){
				if(product.toLowerCase().equals("propertyattributeparcelpremium"))	
					_columns = parcelpremiumcolumns;
				else if(product.toLowerCase().equals("propertyattributeparcelplus"))
					_columns = parcelpluscolumns;
				else if(product.toLowerCase().equals("propertyattributeparcelclassic"))
					_columns = parcelclassiccolumns;
				else if(product.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
					_columns = parcelpremiumhistoriccolumns;
			}
			else if(state.toLowerCase().equals("usa")){
				if(product.toLowerCase().equals("propertyattributeparcelpremium"))	
					_columns = stateparcelpremiumcolumns;
				else if(product.toLowerCase().equals("propertyattributeparcelplus"))
					_columns = stateparcelpluscolumns;
				else if(product.toLowerCase().equals("propertyattributeparcelclassic"))
					_columns = stateparcelclassiccolumns;	
				else if(product.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
					_columns = parcelpremiumhistoriccolumns;
			}
			else
			{
				if(product.toLowerCase().equals("propertyattributeparcelpremium"))	
					_columns = fipsparcelpremiumcolumns;
				else if(product.toLowerCase().equals("propertyattributeparcelplus"))
					_columns = fipsparcelpluscolumns;
				else if(product.toLowerCase().equals("propertyattributeparcelclassic"))
					_columns = fipsparcelclassiccolumns;
				else if(product.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
					_columns = parcelpremiumhistoriccolumns;

			}
		}
		else if((product.toLowerCase().equals("propertyattributegem")) || (product.toLowerCase().equals("propertyattributefabric"))){
			if(fips.equals("All")){
			_columns = "IND_CODE,pbKey as 'Total Records', stabb,pbKey, pbKey_percentage, FNAME, FNAME_percentage, MNAME,"+
							"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
							"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
							"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage,DUPE_QTY,DUPE_QTY_percentage,unique_flag,unique_flag_percentage,IND_CODE ";
			}
			else if(state.toLowerCase().equals("usa")){
				_columns = "IND_CODE,pbKey as 'Total Records', pbKey, pbKey_percentage, FNAME, FNAME_percentage, MNAME,"+
						"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
						"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
						"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage,DUPE_QTY,DUPE_QTY_percentage,unique_flag,unique_flag_percentage,IND_CODE ";				
			}
			else
			{
				_columns = "IND_CODE,pbKey as 'Total Records', stabb,FIPS,pbKey, pbKey_percentage, FNAME, FNAME_percentage, MNAME,"+
						"MNAME_percentage, LNAME, LNAME_percentage, SUFFIX, SUFFIX_percentage, FNAME2, FNAME2_percentage, MNAME2, MNAME2_percentage,"+
						"LNAME2, LNAME2_percentage, SUFFIX2, SUFFIX2_percentage, BUSNAME, BUSNAME_percentage, RECTYPE, RECTYPE_percentage, PHONE,"+
						"PHONE_percentage, PHONE2, PHONE2_percentage,ADDRESS,ADDRESS_percentage, HOUSE, HOUSE_percentage, PREDIR, PREDIR_percentage, STREET, STREET_percentage, STRTYPE, STRTYPE_percentage, POSTDIR, POSTDIR_percentage, APTTYPE, APTTYPE_percentage, APTNBR, APTNBR_percentage, CITY, CITY_percentage, STATE, STATE_percentage, ZIP, ZIP_percentage, Z4, Z4_percentage, VACANT, VACANT_percentage,TAXADDRESS,TAXADDRESS_percentage, HOUSE2, HOUSE2_percentage, PREDIR2, PREDIR2_percentage, STREET2, STREET2_percentage, STRTYPE2, STRTYPE2_percentage, POSTDIR2, POSTDIR2_percentage, APTTYPE2, APTTYPE2_percentage, APTNBR2, APTNBR2_percentage, CITY2, CITY2_percentage, STATE2, STATE2_percentage, ZIP2, ZIP2_percentage, Z42, Z42_percentage, VACANT2, VACANT2_percentage, FIPSCD, FIPSCD_percentage, PROP_CENSUSTRACT, PROP_CENSUSTRACT_percentage, PROP_MUNINAME, PROP_MUNINAME_percentage, PROP_TOWNSHIPCD, PROP_TOWNSHIPCD_percentage, PROP_SUBDIVISION, PROP_SUBDIVISION_percentage, PROP_ZONING, PROP_ZONING_percentage, PROP_RANGE, PROP_RANGE_percentage, PROP_SECTION, PROP_SECTION_percentage, PROP_LANDUSE, PROP_LANDUSE_percentage, PROP_APN, PROP_APN_percentage, PROP_APNSEQNBR, PROP_APNSEQNBR_percentage, PROP_OWNEROCC, PROP_OWNEROCC_percentage, PROP_ADDRIND, PROP_ADDRIND_percentage, PROP_CORPIND, PROP_CORPIND_percentage, PROP_RESCD, PROP_RESCD_percentage, PROP_IND, PROP_IND_percentage, PROP_MOBHOME, PROP_MOBHOME_percentage, PROP_NRBBLD, PROP_NRBBLD_percentage, PROP_STYLE, PROP_STYLE_percentage, PROP_STORIESCD, PROP_STORIESCD_percentage, PROP_STORIESNBR, PROP_STORIESNBR_percentage, PROP_APTNBR, PROP_APTNBR_percentage, PROP_QLTY, PROP_QLTY_percentage, PROP_BLDGCD, PROP_BLDGCD_percentage, PROP_BLDGIMPCD, PROP_BLDGIMPCD_percentage, PROP_COND, PROP_COND_percentage, PROP_CNSTRTYPE, PROP_CNSTRTYPE_percentage, PROP_EXTNW, PROP_EXTNW_percentage, PROP_VALCALC, PROP_VALCALC_percentage, PROP_VAL_CALCIND, PROP_VAL_CALCIND_percentage, PROP_LAND_VALCALC, PROP_LAND_VALCALC_percentage, PROP_LAND_VALCALC_IND, PROP_LAND_VALCALC_IND_percentage, PROP_IMP_VALCALC, PROP_IMP_VALCALC_percentage, PROP_IMP_VALCALC_IND, PROP_IMP_VALCALC_IND_percentage, PROP_ASSED_VAL, PROP_ASSED_VAL_percentage, PROP_ASSED_LANDVAL, PROP_ASSED_LANDVAL_percentage, PROP_ASSED_IMPVAL, PROP_ASSED_IMPVAL_percentage, PROP_MRKTVAL, PROP_MRKTVAL_percentage, PROP_MRKT_LANDVAL, PROP_MRKT_LANDVAL_percentage, PROP_MRKT_IMPVAL, PROP_MRKT_IMPVAL_percentage, PROP_APPRAISED_VAL, PROP_APPRAISED_VAL_percentage, PROP_APPRAISED_LANDVAL, PROP_APPRAISED_LANDVAL_percentage, PROP_APPRAISED_IMPVAL, PROP_APPRAISED_IMPVAL_percentage, PROP_YRBLD, PROP_YRBLD_percentage, PROP_EFFYRBLD, PROP_EFFYRBLD_percentage, PROP_VIEW, PROP_VIEW_percentage, PROP_LCTN_INFL, PROP_LCTN_INFL_percentage, PROP_FRONTFT, PROP_FRONTFT_percentage, PROP_DEPTHFT, PROP_DEPTHFT_percentage, PROP_ACRES, PROP_ACRES_percentage, PROP_LANDSQFT, PROP_LANDSQFT_percentage, PROP_UNVBLDSQFT, PROP_UNVBLDSQFT_percentage, PROP_BLDSQFTIND, PROP_BLDSQFTIND_percentage, PROP_BLDSQFT, PROP_BLDSQFT_percentage, PROP_LIVINGSQFT, PROP_LIVINGSQFT_percentage, PROP_GRDFLRSQFT, PROP_GRDFLRSQFT_percentage, PROP_GROSSSQFT, PROP_GROSSSQFT_percentage, PROP_ADJGROSSSQFT, PROP_ADJGROSSSQFT_percentage, PROP_BSMTSQFT, PROP_BSMTSQFT_percentage, PROP_PRKGSQFT, PROP_PRKGSQFT_percentage, PROP_RMS, PROP_RMS_percentage, PROP_BEDRMS, PROP_BEDRMS_percentage, PROP_BATHSCALC, PROP_BATHSCALC_percentage, PROP_BATHS, PROP_BATHS_percentage, PROP_FULLBATHS, PROP_FULLBATHS_percentage, PROP_HALFBATHS, PROP_HALFBATHS_percentage, PROP_1QTRBATHS, PROP_1QTRBATHS_percentage, PROP_3QTRBATHS, PROP_3QTRBATHS_percentage, PROP_BATHFIXS, PROP_BATHFIXS_percentage, PROP_AC, PROP_AC_percentage, PROP_BSMTF, PROP_BSMTF_percentage, PROP_FRPL, PROP_FRPL_percentage, PROP_FRPLNBR, PROP_FRPLNBR_percentage, PROP_FRPLTYPE, PROP_FRPLTYPE_percentage, PROP_FND, PROP_FND_percentage, PROP_FLR, PROP_FLR_percentage, PROP_FRAME, PROP_FRAME_percentage, PROP_GAR, PROP_GAR_percentage, PROP_HEAT, PROP_HEAT_percentage, PROP_PRKGSPACES, PROP_PRKGSPACES_percentage, PROP_PRKGTYPE, PROP_PRKGTYPE_percentage, PROP_POOL, PROP_POOL_percentage, PROP_POOLCD, PROP_POOLCD_percentage, PROP_ROOFCOVER, PROP_ROOFCOVER_percentage, PROP_ROOFTYPE, PROP_ROOFTYPE_percentage, PROP_ENERGY, PROP_ENERGY_percentage, PROP_FUEL, PROP_FUEL_percentage, PROP_SEWER, PROP_SEWER_percentage, PROP_WATER, PROP_WATER_percentage, PROP_HOMESTEAD, PROP_HOMESTEAD_percentage, PROP_XMTVET, PROP_XMTVET_percentage, PROP_XMT_DISABLED, PROP_XMT_DISABLED_percentage, PROP_TAXAMT, PROP_TAXAMT_percentage, PROP_TAXYR, PROP_TAXYR_percentage, PROP_DOCYR, PROP_DOCYR_percentage, PROP_SALESDEEDCD, PROP_SALESDEEDCD_percentage, PROP_RECDATE, PROP_RECDATE_percentage, PROP_SELLERNAME, PROP_SELLERNAME_percentage, PROP_SALEDATE, PROP_SALEDATE_percentage, PROP_SALEAMT, PROP_SALEAMT_percentage, PROP_SALECD, PROP_SALECD_percentage, PROP_APNCD, PROP_APNCD_percentage, PROP_APNCNT, PROP_APNCNT_percentage, PROP_ASMTYR, PROP_ASMTYR_percentage, PROP_SALESTRANSCD, PROP_SALESTRANSCD_percentage, PROP_RECDATE_PRIOR, PROP_RECDATE_PRIOR_percentage, PROP_SALEDATE_PRIOR, PROP_SALEDATE_PRIOR_percentage, PROP_SALEAMT_PRIOR, PROP_SALEAMT_PRIOR_percentage, PROP_SALECD_PRIOR, PROP_SALECD_PRIOR_percentage, PROP_APNCD_PRIOR, PROP_APNCD_PRIOR_percentage, PROP_DEEDCD_PRIOR, PROP_DEEDCD_PRIOR_percentage, PROP_DOCYR_PRIOR, PROP_DOCYR_PRIOR_percentage, PROP_DEEDTYPE_PRIOR, PROP_DEEDTYPE_PRIOR_percentage, PROP_SALESTRANSCD_PRIOR, PROP_SALESTRANSCD_PRIOR_percentage, PROP_MTGAMT_PRIOR, PROP_MTGAMT_PRIOR_percentage, PROP_OWNERCD, PROP_OWNERCD_percentage, PROP_SELLCARRYBACK, PROP_SELLCARRYBACK_percentage, PROP_TITTLECOMPANY, PROP_TITTLECOMPANY_percentage, PROP_LOANTOVAL, PROP_LOANTOVAL_percentage, PROP_MTGAMT, PROP_MTGAMT_percentage, PROP_MTGDATE, PROP_MTGDATE_percentage, PROP_MTGLOANCD, PROP_MTGLOANCD_percentage, PROP_MTGDEEDCD, PROP_MTGDEEDCD_percentage, PROP_MTGTERM, PROP_MTGTERM_percentage, PROP_MTGDUEDATE, PROP_MTGDUEDATE_percentage, PROP_MTGASSUMPTIONAMT, PROP_MTGASSUMPTIONAMT_percentage, PROP_LENDERNAME, PROP_LENDERNAME_percentage, PROP_MTGREFICD, PROP_MTGREFICD_percentage, PROP_RMSEQUITYCD, PROP_RMSEQUITYCD_percentage, PROP_MTGINTRATE, PROP_MTGINTRATE_percentage, PROP_MTGINTRATETYPE, PROP_MTGINTRATETYPE_percentage, PROP_MTGAMT2, PROP_MTGAMT2_percentage, PROP_MTGDATE2, PROP_MTGDATE2_percentage, PROP_MTGLOANCD2, PROP_MTGLOANCD2_percentage, PROP_MTGDEEDCD2, PROP_MTGDEEDCD2_percentage, PROP_MTGTERM2, PROP_MTGTERM2_percentage, PROP_MTGDUEDATE2, PROP_MTGDUEDATE2_percentage, PROP_MTGASSUMPTIONAMT2, PROP_MTGASSUMPTIONAMT2_percentage, PROP_LENDERNAME2, PROP_LENDERNAME2_percentage, PROP_MTGREFICD2, PROP_MTGREFICD2_percentage, PROP_RMSEQUITYCD2, PROP_RMSEQUITYCD2_percentage, PROP_MTGINTRATE2, PROP_MTGINTRATE2_percentage, PROP_MTGINTRATETYPE2, PROP_MTGINTRATETYPE2_percentage, PROP_MTGAMT3, PROP_MTGAMT3_percentage, PROP_MTGDATE3, PROP_MTGDATE3_percentage, PROP_MTGLOANCD3, PROP_MTGLOANCD3_percentage, PROP_MTGDEEDCD3, PROP_MTGDEEDCD3_percentage, PROP_MTGTERM3, PROP_MTGTERM3_percentage, PROP_MTGDUEDATE3, PROP_MTGDUEDATE3_percentage, PROP_MTGASSUMPTIONAMT3, PROP_MTGASSUMPTIONAMT3_percentage, PROP_LENDERNAME3, PROP_LENDERNAME3_percentage, PROP_MTGREFICD3, PROP_MTGREFICD3_percentage, PROP_RMSEQUITYCD3, PROP_RMSEQUITYCD3_percentage, PROP_MTGINTRATE3, PROP_MTGINTRATE3_percentage, PROP_MTGINTRATETYPE3, PROP_MTGINTRATETYPE3_percentage, PARCEL_APN, PARCEL_APN_percentage,DUPE_QTY,DUPE_QTY_percentage,unique_flag,unique_flag_percentage,IND_CODE ";				

			}
		}
		
		
		if(state.toLowerCase().equals("usa"))
		{
			if((product.toLowerCase().equals("propertyattributeparcelplus")) || (product.toLowerCase().equals("propertyattributeparcelpremium")) ||
					(product.toLowerCase().equals("propertyattributeparcelclassic")))
				tablename = "pap_usa";
			else if(product.toLowerCase().equals("propertyattributefabric"))
				tablename = "paf_usa";
			else if(product.toLowerCase().equals("propertyattributegem"))
				tablename = "pag_usa";
			else if(product.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
				tablename = "paph_usa";
			
			if(product.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
				sql = "select "+_columns+" from "+tablename+"";
			else
				sql = "select "+_columns+" from "+tablename+"  order by ind_code desc";
			
			
		}
		else{
			if((product.toLowerCase().equals("propertyattributeparcelplus")) || (product.toLowerCase().equals("propertyattributeparcelpremium")) ||
					(product.toLowerCase().equals("propertyattributeparcelclassic")))
				tablename = "pap_usa_state";
			else if(product.toLowerCase().equals("propertyattributefabric"))
				tablename = "paf_usa_state";
			else if(product.toLowerCase().equals("propertyattributegem"))
				tablename = "pag_usa_state";
			
			if(fips.equals("All"))
				sql = "select "+_columns+" from "+tablename+" where stabb ='"+state+"' order by ind_code desc";
			else
			{
				if((product.toLowerCase().equals("propertyattributeparcelplus")) || (product.toLowerCase().equals("propertyattributeparcelpremium")) ||
						(product.toLowerCase().equals("propertyattributeparcelclassic")))
					tablename = "pap_metrics";
				else if(product.toLowerCase().equals("propertyattributefabric"))
					tablename = "paf_metrics";
				else if(product.toLowerCase().equals("propertyattributegem"))
					tablename = "pag_metrics";
				
				sql = "select "+_columns+" from "+tablename+" where stabb ='"+state+"' and fips = '"+fips+"'  order by ind_code desc";
			}
		}
		
		JSONArray json = new JSONArray();
		
		try
		{
			Class.forName("org.gjt.mm.mysql.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://152.144.227.176/dbstats", "dev", "dev");

			//System.out.println(sql);
			Statement stmt = null;
			try {

				stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);

				
				json = new JSONArray();
			    ResultSetMetaData rsmd = rs.getMetaData();

			    while(rs.next()) {
			      int numColumns = rsmd.getColumnCount();
			     
			      Map<String, Object> obj = new LinkedHashMap<String, Object>();
			      
			      for (int i=1; i<numColumns+1; i++) {
			          String column_name = rsmd.getColumnName(i);
			          //System.out.println(column_name);

				          if(rsmd.getColumnType(i)==java.sql.Types.ARRAY){
				           		  obj.put(column_name, rs.getArray(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.BIGINT){
				              obj.put(column_name, rs.getInt(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.BOOLEAN){
				              obj.put(column_name, rs.getBoolean(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.BLOB){
				              obj.put(column_name, rs.getBlob(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.DOUBLE){
				            	if(rs.getString(column_name) != null)
				            	{
				            		 if(rs.getString(column_name).indexOf(".") > 0)
				            		 {
					            		 double dblvalue = Double.parseDouble(rs.getString(column_name));
					            		 convertedstring = String.format("%.3f", dblvalue);
					            		 obj.put(column_name, convertedstring);
				            		 }
				            		 else
				            		 {
				            			 obj.put(column_name,rs.getString(column_name));
				            		 }
				            	}
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.FLOAT){
				              obj.put(column_name, rs.getFloat(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.INTEGER){
				              obj.put(column_name, rs.getInt(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.NVARCHAR){
				              obj.put(column_name, rs.getNString(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.VARCHAR){
					            if(rs.getString(column_name) != null)
					            {	
					            	 if(column_name.toLowerCase().equals("ind_code"))
						            	 {
						            		 if(rs.getString(column_name).equals("A"))
						            			 obj.put(column_name, "All");
						            		 else if(rs.getString(column_name).equals("R"))
						            			 obj.put(column_name, "Residential");
						            		 else if(rs.getString(column_name).equals("C"))
						            			 obj.put(column_name, "Commercial");
						            		 else if(rs.getString(column_name).equals("V"))
						            			 obj.put(column_name, "Vacant");
						            		 else if(rs.getString(column_name).equals("N"))
						            			 obj.put(column_name, "Unknown");
						            	 }
						            	 else if(column_name.toLowerCase().equals("stabb"))
						            	 {
						            		 obj.put(column_name,rs.getString(column_name));
						            	 }
						            	 else
						            	 {
						            		 if(rs.getString(column_name).indexOf(".") > 0)
						            		 {
							            		 double dblvalue = Double.parseDouble(rs.getString(column_name));
							            		 convertedstring = String.format("%.3f", dblvalue);
							            		 obj.put(column_name, convertedstring);
						            		 }
						            		 else
						            		 {
						            			 obj.put(column_name,rs.getString(column_name));
						            		 }
						            	 }
					            }
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.TINYINT){
				              obj.put(column_name, rs.getInt(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.SMALLINT){
				              obj.put(column_name, rs.getInt(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.DATE){
				              obj.put(column_name, rs.getDate(column_name));
				             }
				             else if(rsmd.getColumnType(i)==java.sql.Types.TIMESTAMP){
				             obj.put(column_name, rs.getTimestamp(column_name));   
				             }
				             else{
				              obj.put(column_name, rs.getObject(column_name));
				             }
				      }

					
			      Iterator<Entry<String, Object>> itr= obj.entrySet().iterator();
			      JsonObject jsonobj = new JsonObject();
			      while(itr.hasNext()){
			    	  Entry<String, Object> en = itr.next();			    	 
			    	  jsonobj.addProperty(en.getKey(), en.getValue().toString());
			    	  
			      }
			      
			      json.put(jsonobj);
			    }

			} finally {
				conn.close();
			}
		}
		catch(Exception ex)
		{
			_flag =  false;
			ex.printStackTrace();
		}
		
		//System.out.println(json);
		
		return json;
	}

	
	
//******************************************************************************************************************************	
	public JSONArray getPoiStats(String product,String tablename)
	{
		//ArrayList<voProduct> poiproduct = new ArrayList<voProduct>();
		JSONArray json = new JSONArray();
		String sql = null;
		String convertedstring = "";
		try
		{
			Class.forName("org.gjt.mm.mysql.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://152.144.227.176/dbstats", "dev", "dev");

			if(tablename.toLowerCase().equals("wd_camglocat_global_catalogue_2017"))
				sql = "`Region`,`Country`,`WPPOI_Cycle`,`WPPOI_Data_Source`,`WPPOI_Data_Available`,`WPPOI_Version`,`WPPOI_Released_Month`,`WPOI_Cycle`,`WPOI_Cycle_Month`,`WPOI_Data_Source`,`WPOI_Data_Available`,`WPOI_Vintage`,`WPOI_Released_Month`,`WBO_Cycle`,`WBO_Cycle_Month`,`WBO_Data_Source`,`WBO_Data_Available`,`WBO_Vintage`,`WBO_Released_Month`,`Admin_Cycle`,`Admin_Cycle_Month`,`Admin_Source`,`Admin_Available`,`Admin_Vintage`,`Admin_Data_Released`,`StreetPro_Cycle`,`StreetPro_Data_Source`,`StreetPro_Available`,`StreetPro_Vintage`,`StreetPro_Released`,`StreetProNav_Cycle`,`StreetProNav_Data_Source`,`StreetProNav_Available`,`StreetProNav_Vintage`,`StreetProNav_Released`,`StreetProWrld_Cycle`,`StreetProWrld_Data_Source`,`StreetProWrld_Available`,`StreetProWrld_Vintage`,`StreetProWrld_Released`,`RJS_Cycle`,`RJS_Cycle_Month`,`RJS_Source`,`RJS_Available`,`RJS_Vintage`,`RJS_Released`,`ERM_Cycle`,`ERM_Cycle_Month`,`ERM_Source`,`ERM_Available`,`ERM_Vintage`,`ERM_Released`,`ERM_Historic_Data`,`ERM_CVR`,`RF_Cycle`,`RF_Cycle_Month`,`RF_Source`,`RF_Available`,`RF_Version`,`RF_Data_Vintage`,`RF_Released`,`AD_Cycle`,`AD_Source`,`AD_Available`,`AD_Vintage`,`AD_Released`,`AD_Updated`,`Loqate_Cycle`,`Loqate_Source`,`Loqate_Available`,`Loqate_Released_Month`,`Loqate_Verification_Level`,`Loqate_Geocoding_Level`,`Loqate_Power_Search`,`ADN_Cycle`,`ADN_Source`,`ADN_Available`,`ADN_Version`,`ADN_Released_Month`,`ADN_Knowledgebase_Updated`,`ADN_Validation_Level`,`ADN_RefData_Updated`,`ADN_Geocode_Updated`,`ICP_Cycle`,`ICP_Source`,`ICP_Available`,`ICP_Released`,`ICP_Updated`,`ICP_Level`,`Cameo_Data`,`Cameo_Level`,`DetDem_Data`,`DetDem_Level`,`BaseDem_Data`,`BaseDem_Level`,`PAD Release Cycle`,`PAD Source`,`PAD Version`,`PAD Availibilty`,`PAD Part Code`,`PAD Format`,`PAD Geography Level`,`PAD Group`,`AED Release Cycle`,`AED Source`,`AED Version`,`AED Availibilty`,`AED Part Code`,`AED Format`,`AED Geography Level`,`AED Group` from "+ tablename;
			else if(tablename.toLowerCase().equals("world premium poi"))
				sql = "select Region, Country, WPPOI_Cycle, WPPOI_Data_Source, WPPOI_Data_Available, WPPOI_Version, WPPOI_Released_Month  from productmaster "
						+ "where (WPPOI_Cycle <>'' or WPPOI_Data_Source <>'' or  WPPOI_Data_Available <>'' or  WPPOI_Version <>'' or WPPOI_Released_Month <>'')";
			else if(tablename.toLowerCase().equals("world poi"))
				sql = "select Region, Country, WPOI_Cycle, WPOI_Data_Source, WPOI_Data_Available, WPOI_Vintage, WPOI_Released_Month  from productmaster "
						+ " where (WPOI_Cycle <> '' or WPOI_Data_Source <> '' or WPOI_Data_Available <> '' or WPOI_Vintage <> '' or WPOI_Released_Month <> '')";
			else if(tablename.toLowerCase().equals("world boundaries premium"))
				sql = "select Region, Country, WBO_Cycle, WBO_Data_Source, WBO_Data_Available, WBO_Vintage, WBO_Released_Month  from productmaster "
						+ " where (WBO_Cycle <> '' or WBO_Data_Source <> '' or WBO_Data_Available <> '' or WBO_Vintage <> '' or WBO_Released_Month <> '')";
			else if(tablename.toLowerCase().equals("postal and admin boundaries"))
				sql = "select Region, Country, Admin_Cycle, Admin_Source, Admin_Available, Admin_Vintage, Admin_Data_Released  from productmaster "
						+ " where (Admin_Cycle <> '' or Admin_Source <> '' or Admin_Available <> '' or Admin_Vintage <> '' or Admin_Data_Released <> '')";
			else if(tablename.toLowerCase().equals("streetpro classic"))
				sql = "select Region, Country, StreetPro_Cycle, StreetPro_Data_Source, StreetPro_Available, StreetPro_Vintage, StreetPro_Released  from productmaster "
						+ " where (StreetPro_Cycle <> '' or StreetPro_Data_Source <> '' or StreetPro_Available <> '' or StreetPro_Vintage <> '' or StreetPro_Released <> '')";
			else if(tablename.toLowerCase().equals("streetpro display"))
				sql = "select Region, Country, StreetPro_Cycle, StreetPro_Data_Source, StreetPro_Available, StreetPro_Vintage, StreetPro_Released  from productmaster "
						+ " where (StreetPro_Cycle <> '' or StreetPro_Data_Source <> '' or StreetPro_Available <> '' or StreetPro_Vintage <> '' or StreetPro_Released <> '')";
			else if(tablename.toLowerCase().equals("streetpro navigation"))
				sql = "select Region, Country, StreetProNav_Cycle, StreetProNav_Data_Source, StreetProNav_Available, StreetProNav_Vintage, StreetProNav_Released  from productmaster "
						+ " where (StreetProNav_Cycle <> '' or StreetProNav_Data_Source <> '' or StreetProNav_Available <> '' or StreetProNav_Vintage <> '' or StreetProNav_Released <> '')";
			else if(tablename.toLowerCase().equals("streetpro wrld"))
				sql = "select Region, Country, StreetProWrld_Cycle, StreetProWrld_Data_Source, StreetProWrld_Available, StreetProWrld_Vintage, StreetProWrld_Released  from productmaster "
						+ " where (StreetProWrld_Cycle <> '' or StreetProWrld_Data_Source <> '' or StreetProWrld_Available <> '' or StreetProWrld_Vintage <> '' or StreetProWrld_Released <> '')";
			else if(tablename.toLowerCase().equals("routing j server data"))
				sql = "select Region, Country, RJS_Cycle, RJS_Source, RJS_Available, RJS_Vintage, RJS_Released  from productmaster "
						+ " where (RJS_Cycle <> '' or RJS_Source <> '' or RJS_Available <> '' or RJS_Vintage <> '' or RJS_Released <> '')";
			else if(tablename.toLowerCase().equals("enterprise routing module"))
				sql = "select Region, Country, ERM_Cycle, ERM_Source, ERM_Available, ERM_Vintage, ERM_Released  from productmaster "
						+ " where (ERM_Cycle <>'' or ERM_Source <>'' or ERM_Available <>'' or ERM_Vintage <>'' or ERM_Released<>'')";
			else if(tablename.toLowerCase().equals("route finder data"))
				sql = "select Region, Country, RF_Cycle,RF_Cycle_Month, RF_Source, RF_Available, RF_Version, RF_Data_Vintage, RF_Released  from productmaster "
						+ " where (RF_Cycle <> '' or RF_Cycle_Month <> '' or RF_Source <> '' or RF_Available <> '' or RF_Version <> '' or RF_Data_Vintage <> '' or RF_Released <>'')";
			else if(tablename.toLowerCase().equals("address doctor"))
				sql = "select Region, Country, AD_Cycle, AD_Source, AD_Available, AD_Vintage, AD_Released, AD_Updated  from productmaster "
						+ " where (AD_Cycle <> '' or AD_Source <> '' or AD_Available <> '' or AD_Vintage <> '' or AD_Released <> '' or AD_Updated	<>'')";
			else if(tablename.toLowerCase().equals("loqate"))
				sql = "select Region, Country, Loqate_Cycle, Loqate_Source, Loqate_Available, Loqate_Released_Month, Loqate_Verification_Level, Loqate_Geocoding_Level, Loqate_Power_Search  from productmaster "
						+ " where (Loqate_Cycle <> '' or Loqate_Source <> '' or Loqate_Available <> '' or Loqate_Released_Month <> '' or Loqate_Verification_Level <> '' or Loqate_Geocoding_Level <> '' or Loqate_Power_Search <> '')";
			else if(tablename.toLowerCase().equals("address now"))
				sql = "select Region, Country, ADN_Cycle, ADN_Source, ADN_Available, ADN_Version, ADN_Released_Month, ADN_Knowledgebase_Updated, ADN_Validation_Level, ADN_RefData_Updated, ADN_Geocode_Updated  from productmaster "
						+ " where (ADN_Cycle <> '' or ADN_Source <> '' or ADN_Available <> '' or ADN_Version <> '' or ADN_Released_Month <> '' or ADN_Knowledgebase_Updated <> '' or ADN_Validation_Level <> '' or ADN_RefData_Updated <> '' or ADN_Geocode_Updated <> '')";
			else if(tablename.toLowerCase().equals("icp"))
				sql = "select Region, Country, ICP_Cycle, ICP_Source, ICP_Available, ICP_Released, ICP_Updated, ICP_Level  from productmaster "
						+ " where (ICP_Cycle <> '' or ICP_Source <> '' or ICP_Available <> '' or ICP_Released <> '' or ICP_Updated <> '' or ICP_Level	<>'')";
			else if(tablename.toLowerCase().equals("cameo"))
				sql = "select Region, Country, Cameo_Data, Cameo_Level  from productmaster where (Cameo_Data<>'' or Cameo_Level <> '')";
			else if(tablename.toLowerCase().equals("detail demographics"))
				sql = "select Region, Country,DetDem_Data, DetDem_Level  from productmaster where (DetDem_Data <> '' or DetDem_Level <> '')";
			else if(tablename.toLowerCase().equals("base demographics"))
				sql = "select Region, Country, BaseDem_Data, BaseDem_Level  from productmaster where (BaseDem_Data <> '' or BaseDem_Level <> '')";
			else if(tablename.toLowerCase().equals("property attribute data"))
				sql = "select Region, Country, `PAD Release Cycle`,`PAD Source`,`PAD Version`,`PAD Availibilty`,`PAD Part Code`,`PAD Format`,`PAD Geography Level`,`PAD Group`  from productmaster "
						+ " where (`PAD Release Cycle` <> '' or `PAD Source` <> '' or `PAD Version` <> '' or `PAD Availibilty` <> '' or `PAD Part Code` <> '' or `PAD Format` <> '' or `PAD Geography Level` <> '' or `PAD Group` <> '')";
			else if(tablename.toLowerCase().equals("addressing enrichment data"))
				sql = "select Region, Country, `AED Release Cycle`,`AED Source`,`AED Version`,`AED Availibilty`,`AED Part Code`,`AED Format`,`AED Geography Level`,`AED Group`  from productmaster "
						+ " where (`AED Release Cycle` <> '' or `AED Source` <> '' or `AED Version` <> '' or `AED Availibilty` <> '' or `AED Part Code` <> '' or `AED Format` <> '' or `AED Geography Level` <> '' or `AED Group` <> '')";
			
			else
			{
				tablename = getTablename(product, tablename);
				sql = "Select * from "+ tablename;
			}
			
			System.out.println(sql);
			Statement stmt = null;
			try {

				stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);
				
				json = new JSONArray();
			    ResultSetMetaData rsmd = rs.getMetaData();

			    while(rs.next()) {
			      int numColumns = rsmd.getColumnCount();
			     
			      Map<String, Object> obj = new LinkedHashMap<String, Object>();
			      
			      for (int i=1; i<numColumns+1; i++) {
			          String column_name = rsmd.getColumnName(i);
			          //System.out.println(column_name);

			          if(rsmd.getColumnType(i)==java.sql.Types.ARRAY){
			              obj.put(column_name, rs.getArray(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BIGINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BOOLEAN){
			              obj.put(column_name, rs.getBoolean(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BLOB){
			              obj.put(column_name, rs.getBlob(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.DOUBLE){
			            	 if(tablename.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
			            	 {
				            	if(rs.getString(column_name) != null)
				            	{
				            		 if(rs.getString(column_name).indexOf(".") > 0)
				            		 {
					            		 double dblvalue = Double.parseDouble(rs.getString(column_name));
					            		 convertedstring = String.format("%.3f", dblvalue);
					            		 obj.put(column_name, convertedstring);
				            		 }
				            		 else
				            		 {
				            			 obj.put(column_name,rs.getString(column_name));
				            		 }
				            	}
			            	 }
			            	 else
			            	 {
			            		 obj.put(column_name,rs.getString(column_name));
			            	 }
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.FLOAT){
			              obj.put(column_name, rs.getFloat(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.INTEGER){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.NVARCHAR){
			              obj.put(column_name, rs.getNString(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.VARCHAR){
			            	 if(tablename.toLowerCase().equals("propertattributeparcelpremiumhistoric"))
			            	 { 
			            		 if(rs.getString(column_name).indexOf(".") > 0)
			            		 {
				            		 double dblvalue = Double.parseDouble(rs.getString(column_name));
				            		 convertedstring = String.format("%.3f", dblvalue);
				            		 obj.put(column_name, convertedstring);
			            		 }
			            		 else
			            		 {
			            			 obj.put(column_name,rs.getString(column_name));
			            		 }
			            	 }
			            	 else
			            	 {
			            		 obj.put(column_name,rs.getString(column_name));
			            	 }
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.TINYINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.SMALLINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.DATE){
			              obj.put(column_name, rs.getDate(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.TIMESTAMP){
			             obj.put(column_name, rs.getTimestamp(column_name));   
			             }
			             else{
			              obj.put(column_name, rs.getObject(column_name));
			             }
			      }
			      
			        
			      Iterator<Entry<String, Object>> itr= obj.entrySet().iterator();
			      JsonObject jsonobj = new JsonObject();
			      while(itr.hasNext()){
			    	  Entry<String, Object> en = itr.next();			    	 
			    	  jsonobj.addProperty(en.getKey(), en.getValue().toString());
			      }
			      
			      json.put(jsonobj);
			    }

			} finally {
				conn.close();
			}
		}
		catch(Exception ex)
		{
			_flag =  false;
			ex.printStackTrace();
		}
		
		//System.out.println(json);
		
		return json;
	}

//************************************************************************************************************************************
	public String getTablename(String _productname,String _tablename)
	{
		//ArrayList<voProduct> country = new ArrayList<voProduct>();
		String sql = null;
		String tablereturn = null;
		boolean _flag = false;
		try
		{
			Class.forName("org.gjt.mm.mysql.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://152.144.227.176/dbstats", "dev", "dev");			
		
			sql = "select filter2 from filters where filter2display = '"+_tablename+"' and products = '"+_productname+"'";
			
			System.out.println(sql);
			Statement stmt = null;
			try {

				stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);

	             while (rs.next()) {
	            	 tablereturn = rs.getString("filter2");	 
	             }
	            // System.out.println("collected Country Data :: " + country.size());

			} finally {
				conn.close();
			}
		}
		catch(Exception ex)
		{
			_flag =  false;
			ex.printStackTrace();
		}
		return tablereturn;
	}
//************************************************************************************************************************	
	public JSONArray getCountryPoiStats(String tablename, String country)
	{
		//ArrayList<voProduct> poiproduct = new ArrayList<voProduct>();
		JSONArray json = new JSONArray();
		String sql = null;
		try
		{
			Class.forName("org.gjt.mm.mysql.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://152.144.227.176/dbstats", "dev", "dev");
			if((tablename.equals("wppoi_country_category")) || (tablename.equals("wppoic_country_category")))
				sql = "Select * from "+ tablename + " where countries ='"+country+"'";
			else if((tablename.equals("wppoi_percentageattribute_fill_rates")) || (tablename.equals("wppoic_percentageattribute_fill_rates")))
				sql = "Select * from "+ tablename + " where `country name` ='"+country+"'";


			//System.out.println(sql);
			Statement stmt = null;
			try {

				stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);
				
				json = new JSONArray();
			    ResultSetMetaData rsmd = rs.getMetaData();

			    while(rs.next()) {
			      int numColumns = rsmd.getColumnCount();
			     
			      Map<String, Object> obj = new LinkedHashMap<String, Object>();
			      
			      for (int i=1; i<numColumns+1; i++) {
			          String column_name = rsmd.getColumnName(i);
			          //System.out.println(column_name);

			          if(rsmd.getColumnType(i)==java.sql.Types.ARRAY){
			              obj.put(column_name, rs.getArray(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BIGINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BOOLEAN){
			              obj.put(column_name, rs.getBoolean(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BLOB){
			              obj.put(column_name, rs.getBlob(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.DOUBLE){
			              obj.put(column_name, rs.getDouble(column_name)); 
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.FLOAT){
			              obj.put(column_name, rs.getFloat(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.INTEGER){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.NVARCHAR){
			              obj.put(column_name, rs.getNString(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.VARCHAR){
			              obj.put(column_name, rs.getString(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.TINYINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.SMALLINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.DATE){
			              obj.put(column_name, rs.getDate(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.TIMESTAMP){
			             obj.put(column_name, rs.getTimestamp(column_name));   
			             }
			             else{
			              obj.put(column_name, rs.getObject(column_name));
			             }
			      }
			      
			        
			      Iterator<Entry<String, Object>> itr= obj.entrySet().iterator();
			      JsonObject jsonobj = new JsonObject();
			      while(itr.hasNext()){
			    	  Entry<String, Object> en = itr.next();			    	 
			    	  jsonobj.addProperty(en.getKey(), en.getValue().toString());
			      }
			      
			      json.put(jsonobj);
			    }

			} finally {
				conn.close();
			}
		}
		catch(Exception ex)
		{
			_flag =  false;
			ex.printStackTrace();
		}
		
		//System.out.println(json);
		
		return json;
	}


/*
//******************************************************************************************************************************	
 * 
 */
	public JSONArray getCountryPoiStats1(String tablename,String country)
	{
		//ArrayList<voProduct> poiproduct = new ArrayList<voProduct>();
		JSONArray json = new JSONArray();
		String sql = null;
		try
		{
			Class.forName("org.gjt.mm.mysql.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://152.144.227.176/dbstats", "dev", "dev");

			
			
			if((tablename.equals("wppoi_country_category")) || (tablename.equals("wppoic_country_category")))
				sql = "Select * from "+ tablename + " where countries ='"+country+"'";
			else if((tablename.equals("wppoi_percentageattribute_fill_rates")) || (tablename.equals("wppoic_percentageattribute_fill_rates")))
				sql = "Select * from "+ tablename + " where iso3 ='"+country+"'";


			System.out.println(sql);
			Statement stmt = null;
			try {

				stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);
				
				json = new JSONArray();
			    ResultSetMetaData rsmd = rs.getMetaData();

			    while(rs.next()) {
			    	
				      int numColumns = rsmd.getColumnCount();					     
				      Map<String, Object> obj = new LinkedHashMap<String, Object>();
			      
			      for (int i=1; i<numColumns+1; i++) {
			          String column_name = rsmd.getColumnName(i);

			          if(rsmd.getColumnType(i)==java.sql.Types.ARRAY){
			              obj.put(column_name, rs.getArray(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BIGINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BOOLEAN){
			              obj.put(column_name, rs.getBoolean(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.BLOB){
			              obj.put(column_name, rs.getBlob(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.DOUBLE){
			              obj.put(column_name, rs.getDouble(column_name)); 
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.FLOAT){
			              obj.put(column_name, rs.getFloat(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.INTEGER){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.NVARCHAR){
			              obj.put(column_name, rs.getNString(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.VARCHAR){
			            	 //rs.getString(column_name).replaceAll(",", ";");
			              obj.put(column_name, rs.getString(column_name).replaceAll(",", ";"));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.TINYINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.SMALLINT){
			              obj.put(column_name, rs.getInt(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.DATE){
			              obj.put(column_name, rs.getDate(column_name));
			             }
			             else if(rsmd.getColumnType(i)==java.sql.Types.TIMESTAMP){
			             obj.put(column_name, rs.getTimestamp(column_name));   
			             }
			             else{
			              obj.put(column_name, rs.getObject(column_name));
			             }
			      }
			      
			      Iterator<Entry<String, Object>> itr= obj.entrySet().iterator();
			      JsonObject jsonobj = new JsonObject();
			      while(itr.hasNext()){
			    	  Entry<String, Object> en = itr.next();			    	 
			    	  jsonobj.addProperty(en.getKey(), en.getValue().toString());
			      }
			      json.put(obj);
			      
			    }
				 


			} finally {
				conn.close();
			}
		}
		catch(Exception ex)
		{
			_flag =  false;
			ex.printStackTrace();
		}
		System.out.println(json);
		return json;
	}
//************************************************************************************************************************
	public ArrayList<voProduct> getCountries(String _tablename)
	{
		ArrayList<voProduct> country = new ArrayList<voProduct>();
		String sql = null;
		boolean _flag = false;
		try
		{
			Class.forName("org.gjt.mm.mysql.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://152.144.227.176/dbstats", "dev", "dev");
			
			if((_tablename.equals("wppoi_country_category")) || (_tablename.equals("wppoic_country_category")))
			{
				sql = "SELECT distinct countries FROM "+_tablename +" order by countries";
			
			}
			else if((_tablename.equals("wppoi_percentageattribute_fill_rates")) || (_tablename.equals("wppoic_percentageattribute_fill_rates")))
			{
				sql = "SELECT distinct `country name` FROM "+_tablename+" order by `country name`";
				_flag = true;
			}
			

			//System.out.println(sql);
			Statement stmt = null;
			try {

				stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);
				 
				voProduct productobj = null;
	             while (rs.next()) {
	            	 productobj = new voProduct();
	            	 if(_flag)
	            	 {
	            		 productobj.setCountry(rs.getString("country name"));
	            	 }
	            	 else
	            	 {
	            		 productobj.setCountry(rs.getString("countries"));
	            	 }
	            	 	            	 
	            	 country.add(productobj);
	             }
	             System.out.println("collected Country Data :: " + country.size());

			} finally {
				conn.close();
			}
		}
		catch(Exception ex)
		{
			_flag =  false;
			ex.printStackTrace();
		}
		return country;
	}
//************************************************************************************************************************

}
