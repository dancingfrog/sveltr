@mixin fancy-focus {
  border: 1px solid var(--primary) !important;
  // box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  box-shadow: var(--focus_shadow) var(--focus);

  outline: 0;
}

@mixin data-widget($bgcolor: $blue, $color: $white) {
  &.data-widget {
    background-color: $bgcolor;
    .data-widget-icon,
    .data-widget-data {
      color: $color;
    }
  }
}

@mixin disabled {
  border-color: #ddd;
  background-color: #e1e1e1;
  opacity: 1;
  pointer-events: none;
  cursor: not-allowed;
  color: #c0c0c0;
  -webkit-text-fill-color: #c0c0c0;
}

// create border classes at breakpoints, like with margins  etc.
// $edges: top, right, bottom, left !default;

// @each $breakpoint in map-keys($grid-breakpoints) {
//   @include media-breakpoint-up($breakpoint) {
//     $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

//     @each $value in $edges {
//       .border#{$infix}-#{$value} {
//         border-#{$value}: 1px solid var(--border_color) !important;
//       }
//     }
//   }
// }

@mixin table-headers {
  color: var(--text);
  font-family: $font-family-base;
  background-color: transparent;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 11px;
  letter-spacing: 0.08em;
}

@mixin gradient($color-start, $color-center, $color-end) {
  background-image: linear-gradient(90deg, $color-start 0%, $color-center 50%, $color-end 100%);
}

@mixin gradient-angled($color-start, $color-center, $color-end) {
  background-image: linear-gradient(135deg, $color-start 0%, $color-center 50%, $color-end 100%);
}

//see https://codepen.io/smlombardi/full/mddVGNq
@mixin gradient-over-image($image) {
  background-image: linear-gradient(135deg, var(--grad_start) 0%, var(--grad_end) 50%, var(--grad_end) 100%),
    linear-gradient(#bbb, #bbb), url($image);
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: multiply;
}

// Contextual backgrounds

@mixin bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color !important;
  }
  a#{$parent} {
    @include hover-focus {
      background-color: darken($color, 10%) !important;
    }
  }
}

@mixin bg-gradient-variant($parent, $leftcolor, $rightcolor) {
  #{$parent} {
    background: $leftcolor linear-gradient(180deg, mix($body-bg, $leftcolor, 15%), $leftcolor) repeat-x !important;
  }
}

@mixin arrow-inside($color: #fff, $left: 65px) {
  &::after {
    position: absolute;
    bottom: -13px;
    left: 4rem;
    border-width: 14px 14px 0;
    border-style: solid;
    border-color: $color transparent;
    content: '';
  }
}

@mixin arrow-outside($color: $blue, $left: 65px) {
  &::before {
    position: absolute;
    bottom: -15px;
    left: 4rem;
    border-width: 14px 14px 0;
    border-style: solid;
    border-color: $color transparent;
    content: '';
  }
}

@mixin focus-ring {
  border-color: var(--focus);
  box-shadow: $btn-focus-box-shadow;
  // outline-width: 6px;
  // outline-style: solid;
  // outline-color: hsla(190, 58%, 79%, .6);
  outline: none;
}

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

@mixin pbi-rotate($degrees, $rotation) {
  transform: rotate($degrees);
}

@mixin pbi-flip($horiz, $vert, $rotation) {
  transform: scale($horiz, $vert);
}
